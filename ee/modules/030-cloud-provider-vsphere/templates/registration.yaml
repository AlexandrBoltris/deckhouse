---
apiVersion: v1
kind: Secret
metadata:
  name: d8-node-manager-cloud-provider
  namespace: kube-system
  {{- include "helm_lib_module_labels" (list .) | nindent 2 }}
type: Opaque
data:
  # obligatory
  type: {{ b64enc "vsphere" | quote }}
  zones: {{ .Values.cloudProviderVsphere.internal.zones | toJson | b64enc | quote }}
  instanceClassKind: {{ b64enc "VsphereInstanceClass" | quote }}
  machineClassKind: {{ b64enc "VsphereMachineClass" | quote }}

  # vsphere
  {{- $vsphereValues := dict }}
  {{- $_ := set $vsphereValues "server" (.Values.cloudProviderVsphere.internal.server | required ".Values.cloudProviderVsphere.internal.server is required") }}
  {{- $_ := set $vsphereValues "username" (.Values.cloudProviderVsphere.internal.username | required ".Values.cloudProviderVsphere.internal.username is required") }}
  {{- $_ := set $vsphereValues "password" (.Values.cloudProviderVsphere.internal.password | required ".Values.cloudProviderVsphere.internal.password is required") }}
  {{- $_ := set $vsphereValues "insecure" (.Values.cloudProviderVsphere.internal.insecure | required ".Values.cloudProviderVsphere.internal.insecure is required") }}
  {{- $_ := set $vsphereValues "regionTagCategory" (.Values.cloudProviderVsphere.internal.regionTagCategory | required ".Values.cloudProviderVsphere.internal.regionTagCategory is required") }}
  {{- $_ := set $vsphereValues "zoneTagCategory" (.Values.cloudProviderVsphere.internal.zoneTagCategory | required ".Values.cloudProviderVsphere.internal.zoneTagCategory is required") }}
  {{- $_ := set $vsphereValues "region" (.Values.cloudProviderVsphere.internal.region | required ".Values.cloudProviderVsphere.internal.region is required") }}
  {{- $_ := set $vsphereValues "sshKey" (.Values.cloudProviderVsphere.internal.sshKey | required ".Values.cloudProviderVsphere.internal.sshKey is required") }}
  {{- $_ := set $vsphereValues "vmFolderPath" (.Values.cloudProviderVsphere.internal.vmFolderPath | required ".Values.cloudProviderVsphere.internal.vmFolderPath is required") }}

  {{- $_ := set $vsphereValues "instanceClassDefaults" dict }}
  {{- if .Values.cloudProviderVsphere.internal.defaultResourcePoolPath }}
    {{- $_ := set $vsphereValues.instanceClassDefaults "resourcePoolPath" .Values.cloudProviderVsphere.internal.defaultResourcePoolPath }}
  {{- end }}
  {{- if hasKey .Values.cloudProviderVsphere.internal "disableTimesync" }}
    {{- $_ := set $vsphereValues.instanceClassDefaults "disableTimesync" .Values.cloudProviderVsphere.internal.disableTimesync }}
  {{- else }}
    {{- $_ := set $vsphereValues.instanceClassDefaults "disableTimesync" true }}
  {{- end }}
  {{- if .Values.cloudProviderVsphere.internal.masterInstanceClass }}
    {{- $_ := set $vsphereValues.instanceClassDefaults "template" (.Values.cloudProviderVsphere.internal.masterInstanceClass.template | required ".Values.cloudProviderVsphere.internal.masterInstanceClass.template is required") }}
    {{- $_ := set $vsphereValues.instanceClassDefaults "datastore" (.Values.cloudProviderVsphere.internal.masterInstanceClass.datastore | required ".Values.cloudProviderVsphere.internal.masterInstanceClass.datastore is required") }}
  {{- end }}

  vsphere: {{ $vsphereValues | toJson | b64enc | quote }}
